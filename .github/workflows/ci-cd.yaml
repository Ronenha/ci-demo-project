name: Spring PetClinic CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  IMAGE_NAME: spring-petclinic

jobs:
  checkstyle:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Checkstyle
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest
      - name: Upload Checkstyle Report
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: build/reports/checkstyle/

  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: checkstyle
    name: Run Tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - run: ./gradlew test

  build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: test
    name: Build App
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - run: ./gradlew build -x test

  docker-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    name: Build & Push Docker Image (MR)
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build & Push
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mr:${SHORT_SHA} .
          docker push ${{ secrets.DOCKER_USERNAME }}/mr:${SHORT_SHA}

  docker-main:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    name: Build & Push Docker Image (Main)
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build & Push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/main:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/main:latest

